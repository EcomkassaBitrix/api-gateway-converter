#!/bin/bash

# EcomKassa Gateway - Auto Deploy Script
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–æ–¥ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç —Å–µ—Ä–≤–∏—Å

set -e  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö

echo "üöÄ Starting deployment..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT_DIR="/var/www/ekomkassa-gateway"
SERVICE_NAME="ekomkassa-gateway"
BRANCH="main"

echo -e "${YELLOW}üìÅ Project directory: ${PROJECT_DIR}${NC}"
echo -e "${YELLOW}üîß Service: ${SERVICE_NAME}${NC}"
echo -e "${YELLOW}üåø Branch: ${BRANCH}${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -d "$PROJECT_DIR" ]; then
    echo -e "${RED}‚ùå Error: Directory ${PROJECT_DIR} not found${NC}"
    exit 1
fi

cd "$PROJECT_DIR"

# –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç
OLD_COMMIT=$(git rev-parse --short HEAD)
echo -e "${YELLOW}üìå Current commit: ${OLD_COMMIT}${NC}"

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
echo -e "${YELLOW}‚è∏Ô∏è  Stopping service...${NC}"
sudo systemctl stop "$SERVICE_NAME"

# –ü–æ–ª—É—á–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–∑ Git
echo -e "${YELLOW}üì• Pulling latest changes from Git...${NC}"
git fetch origin "$BRANCH"
git reset --hard "origin/$BRANCH"

# –ü–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–º–º–∏—Ç
NEW_COMMIT=$(git rev-parse --short HEAD)
echo -e "${GREEN}‚úÖ Updated to commit: ${NEW_COMMIT}${NC}"

# –ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
if [ "$OLD_COMMIT" != "$NEW_COMMIT" ]; then
    echo -e "${YELLOW}üìù Changes:${NC}"
    git log --oneline "$OLD_COMMIT..$NEW_COMMIT"
    echo ""
else
    echo -e "${YELLOW}‚ÑπÔ∏è  No new changes${NC}"
fi

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python –µ—Å–ª–∏ requirements.txt –∏–∑–º–µ–Ω–∏–ª—Å—è
if git diff --name-only "$OLD_COMMIT..$NEW_COMMIT" | grep -q "requirements.txt"; then
    echo -e "${YELLOW}üì¶ Installing Python dependencies...${NC}"
    pip3 install -r requirements.txt
fi

# –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å
echo -e "${YELLOW}‚ñ∂Ô∏è  Starting service...${NC}"
sudo systemctl start "$SERVICE_NAME"

# –ü–æ–¥–æ–∂–¥–∞—Ç—å 2 —Å–µ–∫—É–Ω–¥—ã
sleep 2

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
if sudo systemctl is-active --quiet "$SERVICE_NAME"; then
    echo -e "${GREEN}‚úÖ Service is running${NC}"
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å
    sudo systemctl status "$SERVICE_NAME" --no-pager -l
    
    echo ""
    echo -e "${GREEN}üéâ Deployment successful!${NC}"
    echo -e "${GREEN}üìä Check logs: sudo journalctl -u ${SERVICE_NAME} -n 50 -f${NC}"
else
    echo -e "${RED}‚ùå Service failed to start${NC}"
    echo -e "${RED}üìã Check logs: sudo journalctl -u ${SERVICE_NAME} -n 50${NC}"
    exit 1
fi
